import { useState, useEffect } from "react";
import Head from "next/head";
import Image from "next/image";

import { GameBoard } from "../pages/api/getStepTwo";
import Button from "../components/button";

export default function Home() {
  const [gameBoard, setGameBoard] = useState<GameBoard>({
    nextPassage:
      "You don't know what happend.  You remember falling asleep in your bed, your mom tucking you in tighly under your covers.  But now you're far away from home, you can just feel it.  And this room is dark, and unfamiliar.",
    currentTurn: 0,
    userActions: ["Figure out your next step"],
    nextPassageSummary: [],
    gameOver: false,
    gameStatus: "playing",
  });
  const [summary, setSummary] = useState([
    '"Turn 1: you remember going to bed at home, but you wake up in a dark unfamiliar room."',
  ]);
  const [gameTurn, setGameTurn] = useState(1);
  const [loading, setLoading] = useState(false);

  //make a request to the getStep endpoint
  const makeRequest = async (choice: string) => {
    //create a post request with the choice in the body
    setLoading(true);
    const response = await fetch("/api/getStepTwo", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        userChoice: choice,
        previousGameBoard: gameBoard,
        storySummary: summary,
      }),
    });
    const { data } = await response.json();

    //update the summary
    let updatedSummary = [...summary];
    updatedSummary.push(data.nextPassageSummary);
    setSummary(updatedSummary);

    //update game turn
    setGameTurn(gameTurn + 1);

    setGameBoard(data);
    setLoading(false);
  };

  //setWindow height
  useEffect(() => {
    // add an event listener to set the css style property --height to the window height
    const setHeight = () => {
      document.documentElement.style.setProperty(
        "--height",
        `${window.innerHeight}px`
      );
    };
    setHeight();
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main
        className="bg-center bg-cover max-w-sm mx-auto overflow-y-hidden w-full relative z-20"
        style={{ height: "var(--height)" }}
      >
        <div className="h-screen flex flex-col">
          {/*@ts-ignore*/}
          <img src="/flurish.svg" className="py-8 px-8 opacity-90" />
          <div className="flex justify-between flex-col flex-grow h-full overflow-hidden">
            {/*Main Content Window*/}
            <div
              className={`max-h-full z-20 overflow-y-hidden relative overflow-scroll h-full   flex-col transform transition-transform duration-300 bg-black  ${
                loading && " translate-x-full"
              }`}
            >
              <GameText gameBoard={gameBoard} />
              <GameButtons
                gameBoard={gameBoard}
                makeRequest={makeRequest}
                loading={loading}
              />
            </div>

            <LoadingIcon />
          </div>
        </div>
      </main>
    </>
  );
}

const GameText = ({ gameBoard }: { gameBoard: GameBoard }) => {
  return (
    <div className="p-8">
      <p className="text-gray-50 font-custom text-lg leading-8 font-light">
        {gameBoard?.nextPassage}
      </p>
    </div>
  );
};

const GameButtons = ({
  gameBoard,
  makeRequest,
  loading,
}: {
  gameBoard: GameBoard;
  makeRequest: Function;
  loading: boolean;
}) => {
  return (
    <div className="text-center w-full flex flex-col gap-4 p-8">
      {gameBoard?.gameStatus === "captured" && (
        <div>
          <p className="text-gray-900 mt-8 text-lg leading-8 font-light">
            You&apos;ve been Captured by the Ghosts!
          </p>
        </div>
      )}
      {gameBoard?.gameStatus === "victory" && (
        <div>
          <p className="text-gray-900 mt-8 text-lg leading-8 font-light">
            You&apos;ve Escaped the Manor!
          </p>
        </div>
      )}
      {gameBoard?.gameStatus === "playing" &&
        gameBoard?.userActions.map((action) => (
          <Button
            key={action}
            label={action}
            clickHandler={() => makeRequest(action)}
            active={!loading}
          />
        ))}
    </div>
  );
};

const LoadingIcon = () => {
  return (
    <div className="absolute top-1/4 z-10 w-full">
      <img src="/pencil-draw.gif" className="w-48 h-48 invert mx-auto" />
    </div>
  );
};
